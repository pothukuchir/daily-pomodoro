{"ast":null,"code":"var _jsxFileName = \"/Users/ravikant/Documents/Projects/JavaScript Coding/ReactJS/daily-app/daily-app/src/Components/External.js\";\nimport { Draggable } from '@fullcalendar/interaction';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport meeting from '../Assets/hangouts-meet.png';\nimport work from '../Assets/analytics.png';\nexport class External extends Component {\n  constructor(props) {\n    super(props); // Setting up state \n\n    this.state = {\n      userInput: \"\",\n      list: []\n    };\n  } // Set a user input value\n\n\n  updateInput(value) {\n    this.setState({\n      userInput: value\n    });\n  } // Add item if user input is not empty\n\n\n  addItemMeetWith() {\n    if (this.state.userInput !== '') {\n      const userInput = {\n        id: Math.random(),\n        value: 'Meet with ' + this.state.userInput\n      }; // Update list\n\n      const list = [...this.state.list];\n      console.log(userInput.value);\n      list.push(userInput); // reset\n\n      this.setState({\n        list,\n        userInput: \"\"\n      });\n    }\n  } // Add item if user input is not empty\n\n\n  addItemWorkOn() {\n    if (this.state.userInput !== '') {\n      const userInput = {\n        id: Math.random(),\n        value: 'Work on ' + this.state.userInput\n      }; // Update list\n\n      const list = [...this.state.list];\n      console.log(userInput.value);\n      list.push(userInput); // reset\n\n      this.setState({\n        list,\n        userInput: \"\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"external-events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Add events\"), this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event fc-h-event fc-daygrid-event fc-daygrid-block-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, item.value));\n    }), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"add item . . . \",\n      size: \"sm\",\n      value: this.state.userInput,\n      onChange: item => this.updateInput(item.target.value),\n      \"aria-label\": \"add something\",\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: meeting,\n      height: 20,\n      width: 20,\n      alt: \"meeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      size: \"sm\",\n      onClick: () => this.addItemMeetWith(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Meet with\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: work,\n      height: 20,\n      width: 20,\n      alt: \"meeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      size: \"sm\",\n      onClick: () => this.addItemWorkOn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Work on\")));\n  }\n\n  componentDidMount() {\n    let draggableEl = document.getElementById('external-events');\n    new Draggable(draggableEl, {\n      itemSelector: '.fc-event',\n      eventData: function (eventEl) {\n        return {\n          title: eventEl.innerText\n        };\n      }\n    });\n  }\n\n}\nexport default External;","map":{"version":3,"sources":["/Users/ravikant/Documents/Projects/JavaScript Coding/ReactJS/daily-app/daily-app/src/Components/External.js"],"names":["Draggable","React","Component","Button","InputGroup","FormControl","meeting","work","External","constructor","props","state","userInput","list","updateInput","value","setState","addItemMeetWith","id","Math","random","console","log","push","addItemWorkOn","render","map","item","target","componentDidMount","draggableEl","document","getElementById","itemSelector","eventData","eventEl","title","innerText"],"mappings":"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","sourcesContent":["import { Draggable } from '@fullcalendar/interaction'\nimport React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport meeting from '../Assets/hangouts-meet.png'\nimport work from '../Assets/analytics.png'\n\n\nexport class External extends Component {\n    constructor(props) { \n        super(props); \n      \n        // Setting up state \n        this.state = { \n          userInput : \"\", \n          list:[] \n        } \n    }\n\n    // Set a user input value\n    updateInput(value){\n        this.setState({\n            userInput: value,\n        });\n    }\n\n    // Add item if user input is not empty\n    addItemMeetWith(){\n        if(this.state.userInput!==''){\n            const userInput = {\n                id: Math.random(),\n                value: 'Meet with ' + this.state.userInput\n            };\n\n            // Update list\n            const list = [...this.state.list];\n            \n            console.log(userInput.value)\n            list.push(userInput);\n\n            // reset\n            this.setState({\n                list,\n                userInput: \"\"\n            });\n        }\n    }\n\n    // Add item if user input is not empty\n    addItemWorkOn(){\n        if(this.state.userInput!==''){\n            const userInput = {\n                id: Math.random(),\n                value: 'Work on ' + this.state.userInput\n            };\n\n            // Update list\n            const list = [...this.state.list];\n            \n            console.log(userInput.value)\n            list.push(userInput);\n\n            // reset\n            this.setState({\n                list,\n                userInput: \"\"\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"external-events\">\n                <h4>Add events</h4>\n                    {this.state.list.map(item => {return(\n                            <div className='fc-event fc-h-event fc-daygrid-event fc-daygrid-block-event'>\n                                <div className='fc-event-main'>{item.value}</div>\n                            </div>\n\n                    )})}\n                     \n               \n                <InputGroup className=\"mb-1\"> \n                    <div id=\"form\">\n                        <FormControl \n                            placeholder=\"add item . . . \"\n                            size=\"sm\"\n                            value = {this.state.userInput} \n                            onChange = {item => this.updateInput(item.target.value)} \n                            aria-label=\"add something\"\n                            aria-describedby=\"basic-addon2\"\n                        /> \n                    </div>\n                </InputGroup> \n                <div>\n                    <img src={meeting} height={20} width={20} alt=\"meeting\"/>\n                    <Button \n                    variant=\"dark\"\n                    size=\"sm\"\n                    onClick = {()=>this.addItemMeetWith()} \n                    > \n                    Meet with \n                    </Button> \n                </div>\n                \n                <div>\n                    <img src={work} height={20} width={20} alt=\"meeting\"/>\n                    <Button \n                    variant=\"dark\"\n                    size=\"sm\"\n                    onClick = {()=>this.addItemWorkOn()} \n                    > \n                    Work on \n                    </Button> \n                </div>\n                \n            </div>\n        )\n    }\n   componentDidMount(){\n        let draggableEl = document.getElementById('external-events');\n        new Draggable(draggableEl, {\n            itemSelector: '.fc-event',\n            eventData: function(eventEl) {\n              return {\n                title: eventEl.innerText\n              };\n            }\n          });\n   }\n}\n\nexport default External\n"]},"metadata":{},"sourceType":"module"}